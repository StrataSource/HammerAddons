@PointClass base(BaseEntityPoint) 
	appliesto(MBase) // Exists in HL2 etc, but has no keyvalues.
	 iconsprite("editor/hl2_gamerules.vmt") color(239 163 14) 
 	autovis(Point Entities, Globals, Gamerules)
	= hl2_gamerules : "Proxy entity for HL2 Gamerules"
	[	
	DefaultCitizenType[engine](integer) : "Default Citizen Type" : 0
	DefaultCitizenType(choices) : "Default Citizen Type" : 0 : "Overrides the default citizen type." =
		[
		0 : "None"
		1 : "Downtrodden"
		2 : "Refugee"
		3 : "Rebel"
		5 : "Rebel Brute" [EZ2]
		6 : "Longfall" [EZ2]
		7 : "Arctic" [EZ2]
		8 : "Arbeit Employee" [EZ2]
		4 : "Unique"
		]
	
	// Friendly fire is just a global state now.
	//GlobalFriendlyFire(choices) : "Global Friendly Fire Override" : 2 : "Forces friendly fire or friendly fire prevention on all NPCs." =
	//[
	//	0 : "Disable friendly fire on all NPCs"
	//	1 : "Enable friendly fire on all NPCs"
	//	2 : "N/A"
	//]
	
	//SetEpisodic(choices) : "Episodic" : 2 : "Undefined behavior." =
	//[
	//	0 : "No"
	//	1 : "Yes"
	//	2 : "Default"
	//]
	
	SetPlayerSquadAutosummon(boolean) : "Player Squad Autosummon Allowed" : 1 : "Sets whether citizens are allowed to automatically follow the player again when they're at a command point and left alone for a while."
	
	SetLegacyFlashlight[engine](integer) : "Legacy Flashlight" : 0
	SetLegacyFlashlight(choices) : "Legacy Flashlight" : : "Sets whether the EP2 flashlight or the original flashlight from HL2 and Episode One should be used. " +
		"'No' means use the EP2 version, " +
		"'Yes' means use the original flashlight, and 'Default' doesn't change anything. " =
		[
		"" : "Default"
		0 : "No"
		1 : "Yes"
		]
	
	SetStunstickPickupBehavior[engine](integer) : "Stunstick Pickup Behavior" : 0
	SetStunstickPickupBehavior(choices) : "Stunstick Pickup Behavior" : 0 : "Controls how stunsticks should react to being touched by the player." =
		[
		0 : "Only apply energy and disappear (default)"
		1 : "Allow pickup, apply energy if already owned"
		2 : "Don't apply energy and don't allow pickup"
		3 : "Allow pickup, but never apply energy"
		]

	SetAllowSPRespawn(boolean) : "Allow SP respawn" : 0 : "Allows players to respawn in singleplayer instead of being forced to reload the last save upon dying. Use OnPlayerSpawn in logic_playerproxy to fire an output each time the player respawns."

	//input EpisodicOn(void) : "Turns on Episodic mode."
	//input EpisodicOff(void) : "Turns off Episodic mode."
	//input SetFriendlyFire(integer) : "Sets the global friendly fire override."
	input DefaultCitizenType(integer) : "Sets the default citizen type."
	input SetPlayerSquadAutosummon(bool) : "Sets player squad autosummon."
	input SetLegacyFlashlight(bool) : "Sets legacy flashlight."
	input SetStunstickPickupBehavior(bool) : "Sets stunstick pickup behavior."
	input SetAllowSPRespawn(bool) : "Sets SP respawning."

	@resources
		[
		// We want to include the resources for the specified citizen type.
		func hl2_gamerules
		]
	]
