@PointClass base(TalkNPC, SRCModel) 
	appliesto(P2) 
	autovis(Entities, NPCs, Aper. Personality Core)
	studioprop() 
= npc_personality_core: "Aperture Science Personality Construct. Animated balls with handles."
	[
	// The default core FGD uses the keyvalue ModelSkin to set the skin, which doesn't preview in Hammer
	// Using the regular skin keyvalue instead allows it to preview and actually works fine, but only if ModelSkin isn't also set
	// This will create some weirdness when opening existing maps where ModelSkin will need to be removed for this keyvalue to function,
	// but existing untouched core entities should still keep working fine so I think it's worth the tradeoff
	skin[engine](integer) : "Model Skin" : 0
	skin(choices) : "Model Skin" : 0 : "Sets the skin of the core. If using the alternate model, this sets the eye color. If using the normal model, (0=broken) (1=intact). If using a custom model, any skin number can be entered here. " +
	"NOTE: Older maps may have the keyvalue ModelSkin set instead, disable SmartEdit and remove it to ensure this value is used." =
		[
		0: "[0] Blue Eye / Broken"
		1: "[1] Green Eye / Intact"
		2: "[2] Orange Eye / NA"
		3: "[3] Purple Eye / NA"
		]

	// this is still supported by the engine, but shouldn't appear in hammer
	ModelSkin[engine](integer) : "Model Skin" : 0

	altmodel[engine](boolean) : "Use Alternate Skins" : 0
	altmodel(choices) : "Use Alternate Skins" : 0 : "Use the model with corrupted skins, instead of the skins in the original model. " =
		[
		0: "No"
		1: "Yes"
		]

	model[-srctools](choices) : "[H] Model" : "models/npcs/personality_sphere/personality_sphere.mdl" : "Choose the model to show in Hammer. Set to the same as Use Alternate Skins." =
		[
		"models/npcs/personality_sphere/personality_sphere.mdl": "Original (Wheatley)"
		"models/npcs/personality_sphere/personality_sphere_skins.mdl": "Alternate (Corrupt Cores)"
		]
	model[+srctools](choices) : "[HA] Custom/Hammer Model" : "models/npcs/personality_sphere/personality_sphere.mdl" : "Choose the model to show in Hammer. Set to the same as Use Alternate Skins. Alternatively, if Override Model is enabled you can type/paste in a custom model path here." =
		[
		"models/npcs/personality_sphere/personality_sphere.mdl": "Original (Wheatley)"
		"models/npcs/personality_sphere/personality_sphere_skins.mdl": "Alternate (Corrupt Cores)"
		]

	// Inputs
	input EnableMotion(void) : "Enable physics motion/collision response."
	input DisableMotion(void) : "Disable physics motion/collision response."
	input EnableFlashlight(void) : "Enable the eye flashlight."
	input DisableFlashlight(void) : "Disable the eye flashlight."
	input ForcePickup(void) : "Force the player to pickup the sphere immediately."
	input EnablePickup(void) : "Allow player pickup."
	input DisablePickup(void) : "Disable player pickup."
	input PlayAttach(void) : "Play the attachment animation, used for syncing with the socket's animation."
	input PlayDetach(void) : "Play the detachment animation, used for syncing with the socket's animation."
	input PlayLock(void) : "Play the locking animation, used for syncing with the socket's animation."
	input SetIdleSequence(string) : "Set a sequence to use as an idle sequence."
	input ClearIdleSequence(void) : "Return to the default idle animation."
	input Explode(void) : "Explode the sphere, triggering an explosion effect and some gibs."

	// Outputs
	output OnPlayerPickup(void) : "Fired whenever the player picks up the core."
	output OnPlayerDrop(void) : "Fired whenever the player drops the core."
	]
