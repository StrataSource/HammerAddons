@PointClass 
	base(BasePedButton, SRCModel) 
	appliesto(P2)
	autovis(Test Elements, P2 Buttons, Pedestal) 
	studioprop() 
= prop_button: "A button which is activated by player use or by game inputs. While pressed it can play a tick-tock sound to indicate limited time."
	[
	model[-srctools](studio) : "[H] Model" : "models/props/switch001.mdl" : "The model to display in Hammer. VScript must be used to set the in-game model."
	model[+srctools](studio) : "[HA] Custom Model" : "models/props/switch001.mdl" : "The model to display in Hammer, and the custom model to use if Override Model is enabled."
	
	skin[engine](integer) : "Skin" : 0 : "Skin on the model to use."
	skin(choices) : "Skin" : "0" : "Skin on the model to use. With the normal model, this sets if the button is clean or dirty. With a custom model, any skin number can be entered here." =
		[
		0: "[0] Clean"
		1: "[1] Dirty"
		]

	@resources
		[
		model "models/props/switch001.mdl"
		sound "Portal.button_down"
		sound "Portal.button_up"
		sound "Portal.button_locked"
		sound "Portal.room1_TickTock"
		]
	]
