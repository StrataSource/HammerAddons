@BaseClass base(BaseEntityPhysics, TeamNum, EnableDisable, Toggle, FadeDistance, EZ2Variant) 
	appliesto(!Mesa) // So these can swap to BaseMesaPickup
	color(0 0 200) 
	sphere(fademindist) 
	sphere(fademaxdist) = Item
	[
	spawnflags(flags) : "spawnflags" =
		[
		1: "Start Constrained" : 0
		2 : "Deny player pickup (reserve for NPC)" : 0 [MBase]
		4 : "Not puntable by Gravity Gun" : 0 [MBase]
		8 : "Deny NPC pickup (reserve for player)" : 0 [MBase]
		64 : "Always touchable (no obstruction checking)" : 0 [MBase]
		// Technically in every game, but most won't use it
		1073741824: "Never respawn in multiplayer" : 0 [HL2DM, TF2, complete]
		]

	powerup_model[TF2](string) : "Model" : : "Change the model to something other than the default model."
	automaterialize[TF2](boolean) : "Auto-Materialize" : 1 : "The pickup should automatically materialize after being picked up."

	// Outputs
	output OnPlayerTouch(void) : "Fires when the player touches this object."
	output OnCacheInteraction[!TF2](void) : "This output fires when the player proves they have 'found' this item. Fires on: Player Touch (whether or not player actually acquires the item), Picked up by +USE, Picked up by Physcannon, Punted by Physcannon."


	// Inputs
	input EnablePlayerPickup[MBase](void) : "Enables player pickup if it was previously disabled."
	input DisablePlayerPickup[MBase](void) : "Disables player pickup if it was previously enabled."
	input EnableNPCPickup[MBase](void) : "Enables NPC pickup if it was previously disabled."
	input DisableNPCPickup[MBase](void) : "Disables NPC pickup if it was previously enabled."
	input BreakConstraint[MBase](void) : "Breaks the constraint on this item if it started constrained."
	]
